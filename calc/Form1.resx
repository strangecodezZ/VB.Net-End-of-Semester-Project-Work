<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>